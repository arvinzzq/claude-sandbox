#!/usr/bin/env bash
# 用法：
#   ./claude-in-docker                 # 进入容器 shell（/workspace）
#   ./claude-in-docker --code          # 启动 Claude Code（安全模式）
#   ./claude-in-docker --code --dangerous  # 启动 Claude Code（危险模式）
set -euo pipefail

IMAGE_NAME="claudecode-playwright:latest"
CONTAINER_NAME="claudecode-sandbox"
WORKDIR_IN_CONTAINER="/workspace"

HOST_WORKDIR="${PWD}"

# 与安装脚本保持一致：优先使用项目内 .sandbox（若存在）
if [[ -f ".sandbox/config/.claude.json" ]]; then
  CLAUDE_CFG_HOST="${HOST_WORKDIR}/.sandbox/config/.claude.json"
  MS_PW_CACHE_HOST="${HOST_WORKDIR}/.sandbox/ms-playwright"
  CLAUDE_CACHE_HOST="${HOST_WORKDIR}/.sandbox/cache-claude"
else
  CLAUDE_CFG_HOST="$HOME/.claude.json"
  MS_PW_CACHE_HOST="$HOME/.ms-playwright"
  CLAUDE_CACHE_HOST="$HOME/.cache/claude-code"
fi

ENV_FILE_PATH="${HOST_WORKDIR}/.env"
USE_ENV_FILE=0
[[ -f "${ENV_FILE_PATH}" ]] && USE_ENV_FILE=1

MODE_SHELL=1
RUN_CODE=0
ENABLE_DANGEROUS=0

for arg in "$@"; do
  case "$arg" in
    --code) MODE_SHELL=0; RUN_CODE=1 ;;
    --dangerous) ENABLE_DANGEROUS=1 ;;
    *) echo "未知参数：$arg"; echo "用法: $0 [--code] [--dangerous]"; exit 1 ;;
  done
done

RUN_ARGS=(docker run -it --rm
  --name "${CONTAINER_NAME}"
  --shm-size=2g
  -v "${HOST_WORKDIR}:${WORKDIR_IN_CONTAINER}"
  -v "${CLAUDE_CFG_HOST}:/home/dev/.claude.json"
  -v "${MS_PW_CACHE_HOST}:/ms-playwright"
  -v "${CLAUDE_CACHE_HOST}:/home/dev/.cache/claude-code"
  -w "${WORKDIR_IN_CONTAINER}"
)
if [[ "${USE_ENV_FILE}" = "1" ]]; then
  RUN_ARGS+=( --env-file "${ENV_FILE_PATH}" )
fi
RUN_ARGS+=( "${IMAGE_NAME}" )

if [[ "${MODE_SHELL}" -eq 1 && "${RUN_CODE}" -eq 0 ]]; then
  exec "${RUN_ARGS[@]}" bash
else
  if [[ "${ENABLE_DANGEROUS}" -eq 1 ]]; then
    exec "${RUN_ARGS[@]}" bash -lc 'claude code --dangerous'
  else
    exec "${RUN_ARGS[@]}" bash -lc 'claude code'
  fi
fi
