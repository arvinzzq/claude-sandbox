#!/usr/bin/env bash
# Usage:
#   ./claude-in-docker                 # Enter container shell (/workspace)
#   ./claude-in-docker --code          # Start Claude Code (safe mode)
#   ./claude-in-docker --code --dangerous  # Start Claude Code (dangerous mode)
set -euo pipefail

IMAGE_NAME="claudecode-playwright:latest"
CONTAINER_NAME="claudecode-sandbox"
WORKDIR_IN_CONTAINER="/workspace"

HOST_WORKDIR="${PWD}"

# Use localized configuration if exists, otherwise use image defaults
if [[ -f ".sandbox/config/.claude.json" ]]; then
  CLAUDE_CFG_HOST="${HOST_WORKDIR}/.sandbox/config/.claude.json"
  USE_HOST_CONFIG=1
else
  USE_HOST_CONFIG=0
fi

# Cache directories (always use host paths for persistence)
if [[ -d ".sandbox" ]]; then
  MS_PW_CACHE_HOST="${HOST_WORKDIR}/.sandbox/ms-playwright"
  CLAUDE_CACHE_HOST="${HOST_WORKDIR}/.sandbox/cache-claude"
  CLAUDE_CONFIG_HOST="${HOST_WORKDIR}/.sandbox/claude-config"
else
  MS_PW_CACHE_HOST="$HOME/.ms-playwright"
  CLAUDE_CACHE_HOST="$HOME/.cache/claude-code"
  CLAUDE_CONFIG_HOST="$HOME/.claude"
fi

ENV_FILE_PATH="${HOST_WORKDIR}/.env"
USE_ENV_FILE=0
[[ -f "${ENV_FILE_PATH}" ]] && USE_ENV_FILE=1

MODE_SHELL=1
RUN_CODE=0
ENABLE_DANGEROUS=0

for arg in "$@"; do
  case "$arg" in
    --code) MODE_SHELL=0; RUN_CODE=1 ;;
    --dangerous) ENABLE_DANGEROUS=1 ;;
    *) echo "Unknown argument: $arg"; echo "Usage: $0 [--code] [--dangerous]"; exit 1 ;;
  esac
done

RUN_ARGS=(docker run -it --rm
  --name "${CONTAINER_NAME}"
  --shm-size=2g
  -v "${HOST_WORKDIR}:${WORKDIR_IN_CONTAINER}"
  -v "${MS_PW_CACHE_HOST}:/ms-playwright"
  -v "${CLAUDE_CACHE_HOST}:/home/dev/.cache/claude-code"
  -v "${CLAUDE_CONFIG_HOST}:/home/dev/.claude"
  -w "${WORKDIR_IN_CONTAINER}"
)

# Only mount host config if using localized configuration
if [[ "${USE_HOST_CONFIG}" -eq 1 ]]; then
  RUN_ARGS+=(-v "${CLAUDE_CFG_HOST}:/home/dev/.claude.json")
fi

if [[ "${USE_ENV_FILE}" = "1" ]]; then
  RUN_ARGS+=( --env-file "${ENV_FILE_PATH}" )
fi
RUN_ARGS+=( "${IMAGE_NAME}" )

if [[ "${MODE_SHELL}" -eq 1 && "${RUN_CODE}" -eq 0 ]]; then
  exec "${RUN_ARGS[@]}" bash
else
  if [[ "${ENABLE_DANGEROUS}" -eq 1 ]]; then
    exec "${RUN_ARGS[@]}" bash -lc 'claude code --dangerous'
  else
    exec "${RUN_ARGS[@]}" bash -lc 'claude code'
  fi
fi
